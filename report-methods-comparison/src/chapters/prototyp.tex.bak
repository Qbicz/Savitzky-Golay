\section{Testy wydajności algorytmów}

Wydajność algorytmu jest obok poprawności kluczową cechą. Niektóre szybko działające algorytmy można wykorzystać do analizy zbieranych danych w locie (on-line) i użyć do szybkiej diagnostyki np. w przenośnych aparatach EKG. Jeśli algorytm wymaga wielkich nakładów obliczeniowych, może posłużyć wyłącznie do przetwarzania danych po ich zebraniu.

\subsection{Wyniki testów czasowych}

Testy były przeprowadzane na komputerze z procesorem Intel i7-3610QM i pamięcią RAM 8GB DDR3. Prototypy były uruchamiane pod systemem Windows 8.1 64-bit, w Matlabie R2016a lub z użyciem Pythona 3.5.2 z NumPy 1.11.1 i SciPy 0.18.1. Implementacje C++ kompilowano z użyciem gcc 5.4 z optymalizacją -Ofast i uruchamiano pod systemem Ubuntu 14.04LTS 64-bit.

Wyniki testów czasowych umieszczono w tabeli \ref{tab:time}.

\begin{table}[!htb]
  \centering
  \begin{tabular}{|c|c|c|c|}
  \hline 
  Algorytm  & Czas wykonania, 250 próbek & Czas wykonania, 100000 próbek \\  
  \hline 
  EMD, Matlab, usunięto 1 IMF & 1,04s & 392,1s \\
  \hline
  EMD, Matlab, usunięto 3 IMF & 1,14s & - \\
  \hline
  EMD, C++, usunięto 1 IMF & 95ms & 31,7s \\
  \hline
  NLM, Matlab, P = 10, M = 2000  & 21ms & 83,1s \\
  \hline
  NLM, Matlab, P = 10, M = 100  & 44ms & - \\
  \hline
  WWF, Matlab, okno mediany = 201  & 82ms & 27,2s \\
  \hline
  WWF, Matlab, okno mediany = 21  & 53ms & - \\
  \hline
  WWF, C++, okno mediany = 201 & 51ms & 18,9s \\
  \hline
  SG, Python, M=500 & - & 90ms \\
  \hline
  SG, Python, M=5 & 5 ms & 19 ms \\ 
  \hline
  SG, C++, M=5 & 48 $\mu$s & 2,3 ms \\
  \hline
\end{tabular} 
\caption{Parametry filtru}
\label{tab:time}
\end{table}



Bibliografia

Noise in ECG and how Noise in ECG and how
to deal with it to deal with it
Djordje Popovic
http://www-classes.usc.edu/engr/bme/620/LectureECGNoise.pdf

ECG Statistics, Noise, Artifacts,
and Missing Data
Gari D. Clifford
http://www.mit.edu/~gari/ecgbook/ch3.pdf


